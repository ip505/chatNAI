<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Space-Themed Tic-Tac-Toe</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
            background: black;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: #ffffff;
        }

        /* Background stars animation */
        @keyframes moveStars {
            from {
                transform: translateY(0);
            }
            to {
                transform: translateY(-1000px);
            }
        }

        .stars {
            position: absolute;
            width: 100%;
            height: 100%;
            background: transparent;
            z-index: 0;
            overflow: hidden;
        }

        .stars::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('https://i.imgur.com/Pr7b6YW.png') repeat;
            animation: moveStars 50s linear infinite;
        }

        .nebula {
            position: absolute;
            width: 100%;
            height: 100%;
            background: url('https://i.imgur.com/M7TYrhd.png') no-repeat center;
            background-size: cover;
            opacity: 0.3;
            z-index: 1;
        }

        .container {
            text-align: center;
            position: relative;
            z-index: 2;
        }

        h1 {
            font-size: 2.5em;
            text-shadow: 0px 0px 15px #00FFDC;
        }

        .board {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            width: 300px;
            margin: 0 auto;
        }

        .cell {
            width: 100px;
            height: 100px;
            background-color: rgba(0, 0, 0, 0.8);
            border: 2px solid #00FFDC;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2em;
            cursor: pointer;
            transition: transform 0.5s ease, box-shadow 0.5s ease;
        }

        .cell:hover {
            transform: scale(1.1);
            box-shadow: 0 0 15px #FFD700, 0 0 30px #00FFDC;
        }

        .cell.X {
            color: #FFD700;
            text-shadow: 0 0 15px #FFD700;
        }

        .cell.O {
            color: #00FFDC;
            text-shadow: 0 0 15px #00FFDC;
        }

        .winner {
            font-size: 2em;
            text-shadow: 0px 0px 10px #FFD700;
            margin-top: 20px;
            display: none;
        }

        .game-over .winner {
            display: block;
        }

        /* Responsive design for mobile */
        @media (max-width: 768px) {
            .board {
                width: 90vw;
            }

            .cell {
                width: calc(30vw - 10px);
                height: calc(30vw - 10px);
            }

            h1 {
                font-size: 2em;
            }
        }
    </style>
</head>
<body>
    <div class="stars"></div>
    <div class="nebula"></div>

    <div class="container">
        <h1>Tic-Tac-Toe in Space</h1>
        <div class="board">
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
        </div>
        <div class="winner"></div>
    </div>

    <script>
        const cells = document.querySelectorAll('[data-cell]');
        const winnerMessage = document.querySelector('.winner');
        const board = document.querySelector('.board');
        let currentPlayer = 'X';
        let gameActive = true;

        const winningCombinations = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        cells.forEach(cell => {
            cell.addEventListener('click', handleClick, { once: true });
        });

        function handleClick(e) {
            if (!gameActive) return;

            const cell = e.target;
            placeMark(cell, currentPlayer);

            if (checkWin(currentPlayer)) {
                endGame(false);
            } else if (isDraw()) {
                endGame(true);
            } else {
                switchPlayer();
            }
        }

        function placeMark(cell, currentPlayer) {
            cell.classList.add(currentPlayer);
            cell.textContent = currentPlayer;
        }

        function switchPlayer() {
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        }

        function checkWin(currentPlayer) {
            return winningCombinations.some(combination => {
                return combination.every(index => {
                    return cells[index].classList.contains(currentPlayer);
                });
            });
        }

        function isDraw() {
            return [...cells].every(cell => {
                return cell.classList.contains('X') || cell.classList.contains('O');
            });
        }

        function endGame(draw) {
            gameActive = false;
            if (draw) {
                winnerMessage.textContent = 'It\'s a draw!';
            } else {
                winnerMessage.textContent = `${currentPlayer} Wins!`;
            }
            winnerMessage.style.display = 'block';
        }
    </script>
</body>
</html>
